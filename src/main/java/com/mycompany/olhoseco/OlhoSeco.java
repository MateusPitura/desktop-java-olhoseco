package com.mycompany.olhoseco;

import java.awt.Color;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;

public class OlhoSeco extends javax.swing.JFrame {
    private ImageIcon imgEyeOpen;
    private ImageIcon imgEyeClose;
    private boolean isImgEyeCloseDisplayed;
    private JLabel imgEyeLabel;
    private Timer pauseTimer;
    private Integer count;
    private int blinkSpeed;
    static int initialPosition = 1;
    private Timer timer;

    public OlhoSeco() {       
        initComponents();
        
        btnToggleState.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent e) {
                btnToggleState.setBackground(new Color(0xe0e0e0));
            }

            public void mouseExited(MouseEvent e) {
                btnToggleState.setBackground(new Color(0x904b3d));
            }
        });
        
        this.getContentPane().setBackground(new Color(0xfff8f6));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        positionGroup = new javax.swing.ButtonGroup();
        sizeGroup = new javax.swing.ButtonGroup();
        btnToggleState = new javax.swing.JButton();
        labelSpeed = new javax.swing.JLabel();
        inputBlinkSpeed = new javax.swing.JTextField();
        labelPosition = new javax.swing.JLabel();
        topRight = new javax.swing.JRadioButton();
        topLeft = new javax.swing.JRadioButton();
        bottomLeft = new javax.swing.JRadioButton();
        bottomRight = new javax.swing.JRadioButton();
        labelSize = new javax.swing.JLabel();
        large = new javax.swing.JRadioButton();
        middle = new javax.swing.JRadioButton();
        small = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Olho Seco");
        setBackground(new java.awt.Color(255, 248, 246));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(300, 300));

        btnToggleState.setBackground(new java.awt.Color(144, 75, 61));
        btnToggleState.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnToggleState.setForeground(new java.awt.Color(255, 255, 255));
        btnToggleState.setText("INICIAR");
        btnToggleState.setToolTipText("");
        btnToggleState.setBorderPainted(false);
        btnToggleState.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnToggleState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToggleStateActionPerformed(evt);
            }
        });

        labelSpeed.setForeground(new java.awt.Color(35, 25, 23));
        labelSpeed.setText("Velocidade em segundos");

        inputBlinkSpeed.setForeground(new java.awt.Color(35, 25, 23));
        inputBlinkSpeed.setText("3");
        inputBlinkSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputBlinkSpeedActionPerformed(evt);
            }
        });

        labelPosition.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        labelPosition.setForeground(new java.awt.Color(35, 25, 23));
        labelPosition.setText("Posição");

        topRight.setBackground(new java.awt.Color(255, 248, 246));
        positionGroup.add(topRight);
        topRight.setForeground(new java.awt.Color(35, 25, 23));
        topRight.setText("Em cima direita");
        topRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topRightActionPerformed(evt);
            }
        });

        topLeft.setBackground(new java.awt.Color(255, 248, 246));
        positionGroup.add(topLeft);
        topLeft.setForeground(new java.awt.Color(35, 25, 23));
        topLeft.setSelected(true);
        topLeft.setText("Em cima esquerda");
        topLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topLeftActionPerformed(evt);
            }
        });

        bottomLeft.setBackground(new java.awt.Color(255, 248, 246));
        positionGroup.add(bottomLeft);
        bottomLeft.setForeground(new java.awt.Color(35, 25, 23));
        bottomLeft.setText("Em baixo esquerda");
        bottomLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottomLeftActionPerformed(evt);
            }
        });

        bottomRight.setBackground(new java.awt.Color(255, 248, 246));
        positionGroup.add(bottomRight);
        bottomRight.setForeground(new java.awt.Color(35, 25, 23));
        bottomRight.setText("Em baixo direita");
        bottomRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottomRightActionPerformed(evt);
            }
        });

        labelSize.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        labelSize.setForeground(new java.awt.Color(35, 25, 23));
        labelSize.setText("Tamanho");

        large.setBackground(new java.awt.Color(255, 248, 246));
        sizeGroup.add(large);
        large.setForeground(new java.awt.Color(35, 25, 23));
        large.setText("Grande");
        large.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                largeActionPerformed(evt);
            }
        });

        middle.setBackground(new java.awt.Color(255, 248, 246));
        sizeGroup.add(middle);
        middle.setForeground(new java.awt.Color(35, 25, 23));
        middle.setSelected(true);
        middle.setText("Médio");

        small.setBackground(new java.awt.Color(255, 248, 246));
        sizeGroup.add(small);
        small.setForeground(new java.awt.Color(35, 25, 23));
        small.setText("Pequeno");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(small)
                            .addComponent(bottomLeft)
                            .addComponent(bottomRight)
                            .addComponent(topRight)
                            .addComponent(topLeft)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelSpeed)
                                .addGap(18, 18, 18)
                                .addComponent(inputBlinkSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelSize)
                            .addComponent(large)
                            .addComponent(middle)
                            .addComponent(labelPosition)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btnToggleState, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSpeed)
                    .addComponent(inputBlinkSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelSize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(large)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(middle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(small)
                .addGap(18, 18, 18)
                .addComponent(labelPosition)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(topLeft)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(topRight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bottomLeft)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bottomRight)
                .addGap(18, 18, 18)
                .addComponent(btnToggleState, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnToggleStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToggleStateActionPerformed
        JFrame frame = new JFrame("");

        if(large.isSelected()){
            imgEyeOpen = new ImageIcon(getClass().getResource("/open-large.png"));
            imgEyeClose = new ImageIcon(getClass().getResource("/close-large.png"));
            frame.setSize(192, 108);
        } else if(middle.isSelected()){
            imgEyeOpen = new ImageIcon(getClass().getResource("/open-middle.png"));
            imgEyeClose = new ImageIcon(getClass().getResource("/close-middle.png"));
            frame.setSize(144, 81);            
        } else if(small.isSelected()){
            imgEyeOpen = new ImageIcon(getClass().getResource("/open-small.png"));
            imgEyeClose = new ImageIcon(getClass().getResource("/close-small.png"));
            frame.setSize(96, 54);
        } 
        
        isImgEyeCloseDisplayed = true;
        
        imgEyeLabel = new JLabel(imgEyeOpen);
        
        try{
            blinkSpeed = (int)Integer.valueOf(inputBlinkSpeed.getText());
        } catch (NumberFormatException numberFormatException){
            JOptionPane.showMessageDialog(this, "Velocidade inválida");
            return;
        }
        
        if(blinkSpeed < 1){
            JOptionPane.showMessageDialog(this, "Velocidade inválida, deve ser maior que 1 segundo");
            return;
        }
        
        if (timer != null) {
            timer.stop();
            timer = null;
        }
        
        timer = new Timer(500, new ActionListener() {
            private boolean showingEyeClose = true;

            @Override
            public void actionPerformed(ActionEvent e) {
                if (showingEyeClose) {
                    imgEyeLabel.setIcon(imgEyeClose);
                    ((Timer)e.getSource()).setDelay(blinkSpeed*1000);
                } else {
                    imgEyeLabel.setIcon(imgEyeOpen);
                    ((Timer)e.getSource()).setDelay(500);
                }
                showingEyeClose = !showingEyeClose; // Alterna a imagem na próxima execução
            }
        });

        timer.setInitialDelay(0);
        timer.start();
  
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gd = ge.getDefaultScreenDevice();
        Rectangle screenBounds = gd.getDefaultConfiguration().getBounds();
       
        int frameWidth = frame.getWidth();
        int frameHeight = frame.getHeight();
        
        int x = 0;
        int y = 0;
        if(topRight.isSelected()){
            x = screenBounds.width - frameWidth;
            y = 0;
            initialPosition = 2;
        } else if(topLeft.isSelected()){
            x = 0;
            y = 0;
            initialPosition = 3;
        } else if(bottomLeft.isSelected()){
            x = 0;
            y = screenBounds.height - frameHeight;
            initialPosition = 4;
        } else if(bottomRight.isSelected()) {
            x = screenBounds.width - frameWidth;
            y = screenBounds.height - frameHeight;
            initialPosition = 1;
        } else {
            JOptionPane.showMessageDialog(this, "Escolha pelo menos uma opção");
            return;
        }
        
        frame.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                
                if(initialPosition == 1){
                    int newX = screenBounds.width - frameWidth;
                    int newY = 0;
                    frame.setLocation(newX, newY);
                    initialPosition = 2;
                } else if (initialPosition == 2){
                    int newX = 0;
                    int newY = 0;
                    frame.setLocation(newX, newY);
                    initialPosition = 3;
                } else if (initialPosition == 3){
                    int newX = 0;
                    int newY = screenBounds.height - frameHeight;
                    initialPosition = 4;
                    frame.setLocation(newX, newY);
                } else if (initialPosition == 4){
                    int newX = screenBounds.width - frameWidth;
                    int newY = screenBounds.height - frameHeight;
                    frame.setLocation(newX, newY);
                    initialPosition = 1;
                }
            }
        });

        frame.setLocation(x, y);
        
        frame.add(imgEyeLabel);
        frame.pack();
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setAlwaysOnTop(true);
        frame.setVisible(true);
    }//GEN-LAST:event_btnToggleStateActionPerformed

    private void topRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topRightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_topRightActionPerformed

    private void topLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topLeftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_topLeftActionPerformed

    private void bottomRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottomRightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bottomRightActionPerformed

    private void bottomLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottomLeftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bottomLeftActionPerformed

    private void inputBlinkSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputBlinkSpeedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputBlinkSpeedActionPerformed

    private void largeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_largeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_largeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OlhoSeco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OlhoSeco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OlhoSeco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OlhoSeco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OlhoSeco().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bottomLeft;
    private javax.swing.JRadioButton bottomRight;
    private javax.swing.JButton btnToggleState;
    private javax.swing.JTextField inputBlinkSpeed;
    private javax.swing.JLabel labelPosition;
    private javax.swing.JLabel labelSize;
    private javax.swing.JLabel labelSpeed;
    private javax.swing.JRadioButton large;
    private javax.swing.JRadioButton middle;
    private javax.swing.ButtonGroup positionGroup;
    private javax.swing.ButtonGroup sizeGroup;
    private javax.swing.JRadioButton small;
    private javax.swing.JRadioButton topLeft;
    private javax.swing.JRadioButton topRight;
    // End of variables declaration//GEN-END:variables
}
